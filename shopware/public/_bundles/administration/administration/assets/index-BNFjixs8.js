const i=`<mt-banner v-if="!isHidden" class="sw-settings-services-dashboard-banner__content" closable hide-icon @close="hideBanner" > <h3>{{ $t('sw-settings-services.dashboard-banner.title') }}</h3> <div class="sw-settings-services-dashboard-banner__content"> <div> <p>{{ $t('sw-settings-services.dashboard-banner.description') }}</p> <mt-button variant="primary" @click="$router.push({ name: 'sw.settings.services.index' })" > {{ $t('sw-settings-services.dashboard-banner.label-button-explore') }} <template #iconBack> <mt-icon name="solid-long-arrow-right" size="var(--scale-size-12)" /> </template> </mt-button> </div> <img :src="servicesGraphics" alt="" > </div> </mt-banner>`,t=Shopware.Component.wrapComponentConfig({name:"sw-settings-services-dashboard-banner",template:i,data(){return{isHidden:!0,servicesGraphics:Shopware.Filter.getByName("asset")("/administration/administration/static/img/services/services-graphic.svg")}},created(){Shopware.Service("userConfigService").search(["core.hide-services-dashboard-banner"]).then(e=>{var s;if(typeof e>"u"){this.isHidden=!1;return}if(!e.data){this.isHidden=!1;return}this.isHidden=((s=e.data["core.hide-services-dashboard-banner"])==null?void 0:s[0])??!1}).catch(()=>{this.isHidden=!1})},methods:{async hideBanner(){await Shopware.Service("userConfigService").upsert({"core.hide-services-dashboard-banner":[!0]}),this.isHidden=!0}}});export{t as default};
