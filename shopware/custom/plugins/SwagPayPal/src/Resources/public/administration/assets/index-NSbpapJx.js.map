{"version":3,"file":"index-NSbpapJx.js","sources":["../../../app/administration/src/module/swag-paypal-disputes/page/swag-paypal-disputes-detail/swag-paypal-disputes-detail.html.twig","../../../app/administration/src/module/swag-paypal-disputes/page/swag-paypal-disputes-detail/index.ts"],"sourcesContent":["{% block swag_paypal_disputes_detail %}\n<sw-page class=\"swag-paypal-disputes-detail\">\n\n    {% block swag_paypal_disputes_detail_smart_bar_header %}\n    <template #smart-bar-header>\n\n        {% block swag_paypal_disputes_detail_smart_bar_header_title %}\n        <h2>\n\n            {% block swag_paypal_disputes_detail_smart_bar_header_title %}\n                {{ $t('swag-paypal-disputes.detail.title') }}\n            {% endblock %}\n\n            {% block swag_paypal_disputes_detail_smart_bar_header_dispute_id %}\n                {{ disputeId }}\n            {% endblock %}\n\n            {% block swag_paypal_disputes_detail_smart_bar_header_title_addition %}\n                {{ $t('swag-paypal-disputes.detail.titleAddition') }}\n            {% endblock %}\n\n        </h2>\n        {% endblock %}\n\n    </template>\n    {% endblock %}\n\n    {% block swag_paypal_disputes_detail_content %}\n    <template #content>\n        <sw-card-view>\n\n            {% block swag_paypal_disputes_detail_content_details %}\n            <mt-card\n                position-identifier=\"swag-paypal-disputes-detail-content-details\"\n                :isLoading=\"isLoading\"\n                :title=\"$t('swag-paypal-disputes.detail.mainFieldsCardTitle')\"\n            >\n\n                {% block swag_paypal_disputes_detail_content_details_fields %}\n                <template v-if=\"dispute\">\n\n                    {% block swag_paypal_disputes_detail_content_details_fields_external_link %}\n                    <div class=\"swag-paypal-disputes-detail__links\">\n                        <sw-external-link :href=\"externalDetailPageLink\">\n                            {{ $t('swag-paypal-disputes.detail.externalLinkText') }}\n                        </sw-external-link>\n                    </div>\n                    {% endblock %}\n\n                    {% block swag_paypal_disputes_detail_content_details_fields_order_module_link %}\n                    <div class=\"swag-paypal-disputes-detail__links\">\n                        <router-link\n                            v-if=\"orderModuleLink\"\n                            :to=\"orderModuleLink\"\n                            target=\"_blank\"\n                            rel=\"noopener\"\n                        >\n                            {{ $t('swag-paypal-disputes.detail.orderModuleLinkText') }}\n                        </router-link>\n                    </div>\n                    {% endblock %}\n\n                    {% block swag_paypal_disputes_detail_content_details_fields_separator %}\n                    <hr class=\"swag-paypal-disputes-detail__separator\">\n                    {% endblock %}\n\n                    {% block swag_paypal_disputes_detail_content_details_fields_id %}\n                    <mt-text-field\n                        :modelValue=\"dispute.dispute_id\"\n                        :label=\"$t('swag-paypal-disputes.common.dispute_id')\"\n                        disabled\n                    />\n                    {% endblock %}\n\n                    {% block swag_paypal_disputes_detail_content_details_fields_update_time %}\n                    <mt-text-field\n                        :modelValue=\"formatDate(dispute.update_time)\"\n                        :label=\"$t('swag-paypal-disputes.common.update_time')\"\n                        disabled\n                    />\n                    {% endblock %}\n\n                    {% block swag_paypal_disputes_detail_content_details_fields_due_date %}\n                    <mt-text-field\n                        v-if=\"dispute.seller_response_due_date || dispute.buyer_response_due_date\"\n                        :modelValue=\"getDueDate(dispute.seller_response_due_date, dispute.buyer_response_due_date)\"\n                        :label=\"$t('swag-paypal-disputes.common.response_due_date.label')\"\n                        disabled\n                    />\n                    {% endblock %}\n\n                    {% block swag_paypal_disputes_detail_content_details_fields_status %}\n                    <mt-text-field\n                        :modelValue=\"`${formatTechnicalText(dispute.status)} (${formatTechnicalText(dispute.reason)})`\"\n                        :label=\"$t('swag-paypal-disputes.common.status')\"\n                        disabled\n                    />\n                    {% endblock %}\n\n                    {% block swag_paypal_disputes_detail_content_details_fields_dispute_life_cycle_stage %}\n                    <mt-text-field\n                        :modelValue=\"formatTechnicalText(dispute.dispute_life_cycle_stage)\"\n                        :label=\"$t('swag-paypal-disputes.common.dispute_life_cycle_stage')\"\n                        :class=\"getInquiryClass(dispute.dispute_life_cycle_stage)\"\n                        disabled\n                    />\n                    {% endblock %}\n\n                    {% block swag_paypal_disputes_detail_content_details_fields_dispute_amount %}\n                    <mt-text-field\n                        :modelValue=\"`${dispute.dispute_amount.value} ${dispute.dispute_amount.currency_code}`\"\n                        :label=\"$t('swag-paypal-disputes.common.dispute_amount')\"\n                        disabled\n                    />\n                    {% endblock %}\n\n                </template>\n                {% endblock %}\n\n            </mt-card>\n            {% endblock %}\n\n            {% block swag_paypal_disputes_detail_content_raw_data %}\n            <mt-card\n                position-identifier=\"swag-paypal-disputes-detail-content-raw-data\"\n                :isLoading=\"isLoading\"\n                :title=\"$t('swag-paypal-disputes.detail.rawDataCardTitle')\"\n            >\n\n                {% block swag_paypal_disputes_detail_content_raw_data_content %}\n                <template v-if=\"dispute\">\n\n                    {% block swag_paypal_disputes_detail_content_raw_data_text %}\n                    <mt-textarea\n                        :modelValue=\"JSON.stringify(dispute, null, 2)\"\n                        disabled\n                    />\n                    {% endblock %}\n\n                    {% block swag_paypal_disputes_detail_content_raw_data_copy_button %}\n                    <mt-button variant=\"secondary\" @click=\"copyToClipboard\">\n                        {{ $t('swag-paypal-disputes.detail.copyButtonLabel') }}\n                    </mt-button>\n                    {% endblock %}\n\n                </template>\n                {% endblock %}\n\n            </mt-card>\n            {% endblock %}\n\n        </sw-card-view>\n    </template>\n    {% endblock %}\n\n</sw-page>\n{% endblock %}\n","import type * as PayPal from 'SwagPayPal/types';\nimport type { RouteLocationRaw } from 'vue-router';\nimport template from './swag-paypal-disputes-detail.html.twig';\nimport './swag-paypal-disputes-detail.scss';\n\nconst { Filter, Utils } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst { capitalizeString } = Shopware.Utils.string;\n\nexport default Shopware.Component.wrapComponentConfig({\n    template,\n\n    inject: [\n        'SwagPayPalDisputeApiService',\n        'systemConfigApiService',\n        'repositoryFactory',\n    ],\n\n    mixins: [\n        Shopware.Mixin.getByName('swag-paypal-notification'),\n    ],\n\n    props: {\n        disputeId: {\n            type: String,\n            required: true,\n        },\n\n        salesChannelId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n    },\n\n    data(): {\n        isLoading: boolean;\n        dispute: null | PayPal.V1<'disputes_item'>;\n        resolutionCenterUrl: string;\n        orderModuleLink: null | RouteLocationRaw;\n    } {\n        return {\n            isLoading: false,\n            dispute: null,\n            resolutionCenterUrl: 'https://www.paypal.com/resolutioncenter',\n            orderModuleLink: null,\n        };\n    },\n\n    computed: {\n        orderTransactionRepository() {\n            return this.repositoryFactory.create('order_transaction');\n        },\n\n        orderTransactionCriteria() {\n            const custom = this.dispute?.disputed_transactions?.[0]?.custom;\n            if (!custom) {\n                return null;\n            }\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n            const id = JSON.parse(custom)?.orderTransactionId ?? custom;\n\n            if (!(typeof id === 'string') || id.length !== 32) {\n                return null;\n            }\n\n            const criteria = new Criteria(1, 1);\n            criteria.setIds([id]);\n\n            return criteria;\n        },\n\n        externalDetailPageLink() {\n            return `${this.resolutionCenterUrl}/${this.dispute?.dispute_id ?? ''}`;\n        },\n\n        dateFilter() {\n            return Filter.getByName('date');\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        async createdComponent() {\n            this.isLoading = true;\n\n            const config = await this.systemConfigApiService.getValues('SwagPayPal.settings') as PayPal.SystemConfig;\n\n            if (config['SwagPayPal.settings.sandbox']) {\n                this.resolutionCenterUrl = 'https://www.sandbox.paypal.com/resolutioncenter';\n            }\n\n            this.getDetail();\n        },\n\n        getDetail() {\n            this.SwagPayPalDisputeApiService.detail(this.disputeId, this.salesChannelId).then((dispute) => {\n                this.dispute = dispute;\n                this.setLinkToOrderModule();\n                this.isLoading = false;\n            }).catch(this.handleError.bind(this));\n        },\n\n        handleError(errorResponse: PayPal.ServiceError) {\n            this.createNotificationError({\n                title: this.$t('swag-paypal-disputes.list.errorTitle'),\n                message: this.createMessageFromError(errorResponse),\n            });\n            this.isLoading = false;\n        },\n\n        async setLinkToOrderModule() {\n            if (!this.orderTransactionCriteria) {\n                this.orderModuleLink = null;\n            }\n\n            const orderTransactions = await this.orderTransactionRepository.search(this.orderTransactionCriteria);\n            const orderTransaction = orderTransactions[0];\n\n            if (orderTransaction === null) {\n                return;\n            }\n\n            this.orderModuleLink = { name: 'sw.order.detail.general', params: { id: orderTransaction.orderId } };\n        },\n\n        formatTechnicalText(technicalText: string): string {\n            return capitalizeString(technicalText).replace(/_/g, ' ');\n        },\n\n        getInquiryClass(stage: string): string {\n            if (stage === 'INQUIRY') {\n                return 'swag-paypal-disputes-detail__stage-inquiry';\n            }\n\n            return 'swag-paypal-disputes-detail__stage-other';\n        },\n\n        getDueDate(sellerResponseDueDate: string, buyerResponseDueDate: string) {\n            if (sellerResponseDueDate !== null) {\n                return `${this.$t('swag-paypal-disputes.common.response_due_date.seller')}: ${\n                    this.formatDate(sellerResponseDueDate)}`;\n            }\n\n            if (buyerResponseDueDate !== null) {\n                return `${this.$t('swag-paypal-disputes.common.response_due_date.buyer')}: ${\n                    this.formatDate(buyerResponseDueDate)}`;\n            }\n\n            return '';\n        },\n\n        copyToClipboard() {\n            if (this.dispute === null) {\n                return;\n            }\n\n            try {\n                Utils.dom.copyStringToClipboard(JSON.stringify(this.dispute));\n                this.createNotificationInfo({\n                    message: this.$t('global.sw-field.notification.notificationCopySuccessMessage'),\n                });\n            } catch (err) {\n                this.createNotificationError({\n                    message: this.$t('global.sw-field.notification.notificationCopyFailureMessage'),\n                });\n            }\n        },\n\n        formatDate(dateTime: string) {\n            return this.dateFilter(dateTime, {\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit',\n            });\n        },\n    },\n});\n"],"names":["template","Filter","Utils","Criteria","capitalizeString","index","_a","_b","_c","_d","custom","id","criteria","dispute","errorResponse","orderTransaction","technicalText","stage","sellerResponseDueDate","buyerResponseDueDate","dateTime"],"mappings":"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"}