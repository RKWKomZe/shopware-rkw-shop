{"version":3,"file":"index-BsFzNe0C.js","sources":["../../../app/administration/src/module/extension/sw-settings-shipping/sw-settings-shipping-detail/sw-settings-shipping-detail.html.twig","../../../app/administration/src/constant/swag-paypal-carrier.constant.ts","../../../app/administration/src/module/extension/sw-settings-shipping/sw-settings-shipping-detail/index.ts"],"sourcesContent":["{% block sw_settings_shipping_detail_tax_cost %}\n    {% block sw_settings_shipping_detail_paypal_default_carrier %}\n    <mt-card\n        v-show=\"isPayPalEnabled\"\n        class=\"swag-paypal-settings-shipping-carrier\"\n        position-identifier=\"swag-paypal-settings-shipping-carrier\"\n    >\n        {% block sw_settings_shipping_detail_paypal_default_carrier_title %}\n        <template #title>\n            <div class=\"sw-card__title\">\n                {{ $t('swag-paypal-settings-shipping-carrier.cardTitle') }}\n                <sw-help-text :text=\"$t('swag-paypal-settings-shipping-carrier.cardHelpText')\" />\n            </div>\n        </template>\n        {% endblock %}\n\n        {% block sw_settings_shipping_detail_paypal_default_carrier_description %}\n        <div\n            class=\"swag-paypal-settings-shipping-carrier__description\"\n            v-html=\"$t('swag-paypal-settings-shipping-carrier.description')\"\n        />\n        {% endblock %}\n\n        {% block sw_settings_shipping_detail_paypal_default_carrier_input %}\n        <sw-single-select\n            ref=\"carrierSelect\"\n            v-model:value=\"payPalDefaultCarrier\"\n            :label=\"$t('swag-paypal-settings-shipping-carrier.inputLabel')\"\n            :placeholder=\"$t('swag-paypal-settings-shipping-carrier.inputPlaceholder')\"\n            :help-text=\"$t('swag-paypal-settings-shipping-carrier.inputHelpText')\"\n            :options=\"carrierOptions\"\n            :search-function=\"() => carrierOptions\"\n            :error=\"carrierInvalidError\"\n            :show-clearable-button=\"true\"\n            label-property=\"description\"\n            @paginate=\"paginateCarriers\"\n            @search=\"searchCarriers\"\n            @on-open-change=\"onCarrierSelectOpen\"\n        >\n            <template #result-label-property=\"{ item, highlightSearchTerm }\">\n                <span class=\"swag-paypal-settings-shipping-carrier__carrier_info\">\n                    <sw-highlight-text\n                        v-if=\"highlightSearchTerm && item.value !== payPalDefaultCarrier\"\n                        :text=\"item.description\"\n                        :search-term=\"searchTerm\"\n                    />\n\n                    <template v-else>\n                        {{ item.description }}\n                    </template>\n\n                    <span\n                        v-if=\"!item.isInvalid\"\n                        class=\"swag-paypal-settings-shipping-carrier__carrier_info__code\"\n                    >\n                        {{ item.value }}\n                    </span>\n\n                    <span\n                        v-if=\"commonCarriers.includes(item.value)\"\n                        class=\"swag-paypal-settings-shipping-carrier__carrier_info__common\"\n                    >\n                        {{ $t('swag-paypal-settings-shipping-carrier.commonCarrierBadge') }}\n                    </span>\n                </span>\n            </template>\n        </sw-single-select>\n\n        <mt-text-field\n            v-if=\"selectedCarrierOption?.value === 'OTHER'\"\n            v-model=\"payPalOtherCarrierName\"\n            :label=\"$t('swag-paypal-settings-shipping-carrier.inputLabelOther')\"\n            :placeholder=\"$t('swag-paypal-settings-shipping-carrier.inputPlaceholderOther')\"\n            :help-text=\"$t('swag-paypal-settings-shipping-carrier.inputHelpTextOther')\"\n        />\n        {% endblock %}\n\n    </mt-card>\n    {% endblock %}\n\n    {% parent %}\n{% endblock %}\n","import shipmentCarrier from './shipment_carrier.json';\n\nexport const commonCarriers: string[] = [\n    'ARAMEX',\n    'AU_AU_POST',\n    'CA_CANADA_POST',\n    'CN_CHINA_POST_EMS',\n    'CORREOS_DE_MEXICO',\n    'DEUTSCHE_DE',\n    'DHL',\n    'DPD',\n    'FEDEX',\n    'GLS',\n    'GENERAL_OVERNIGHT',\n    'HERMES',\n    'JPN_JAPAN_POST',\n    'LA_POSTE_SUIVI',\n    'ONTRAC',\n    'IT_POSTE_ITALIA',\n    'NLD_POSTNL',\n    'ROYAL_MAIL',\n    'SF_EX',\n    'TNT',\n    'UPS',\n    'USPS',\n    'YODEL',\n    'OTHER',\n];\n\nexport const descriptionPatch: Record<string, string> = {\n    CORREOS_DE_MEXICO: 'Correos',\n    DEUTSCHE_DE: 'Deutsche Post',\n    DHL: 'DHL',\n    FEDEX: 'FedEx',\n    GENERAL_OVERNIGHT: 'Go!',\n    HERMES: 'Hermes',\n    ONTRAC: 'OnTrac',\n    IT_POSTE_ITALIA: 'Poste Italiane',\n    NLD_POSTNL: 'PostNL',\n    ROYAL_MAIL: 'Royal Mail',\n    SF_EX: 'SF Express (Shun Feng Express)',\n    UPS: 'UPS',\n    USPS: 'USPS',\n    YODEL: 'Yodel',\n};\n\nconst stripHTML = Shopware.Filter.getByName('striphtml');\n\nconst carriers = shipmentCarrier['x-enum'].map((carrier) => {\n    return {\n        value: carrier.value,\n        description: descriptionPatch[carrier.value] || stripHTML(carrier.description).replace(/\\.$/g, ''),\n    };\n});\n\n// Sort carriers by description, but put common carriers on top\ncarriers.sort((a, b) => {\n    const aIncluded = commonCarriers.includes(a.value);\n    const bIncluded = commonCarriers.includes(b.value);\n\n    if (aIncluded && !bIncluded) {\n        return -1;\n    }\n\n    if (!aIncluded && bIncluded) {\n        return 1;\n    }\n\n    return a.description.localeCompare(b.description);\n});\n\ncarriers.splice(commonCarriers.length - 1, 0, {\n    value: 'OTHER',\n    description: 'Other',\n});\n\nexport default carriers;\n","import type * as PayPal from 'SwagPayPal/types';\nimport template from './sw-settings-shipping-detail.html.twig';\nimport './sw-settings-shipping-detail.scss';\nimport carriers, { commonCarriers } from '../../../../constant/swag-paypal-carrier.constant';\n\nconst { Utils } = Shopware;\n\ntype CustomFields = TEntity<'shipping_method'>['customFields'];\ntype SwSingleSelect = {\n    results: object[];\n};\n\nexport default Shopware.Component.wrapComponentConfig({\n    template,\n\n    inject: [\n        'systemConfigApiService',\n    ],\n\n    data(): {\n        isPayPalEnabled: boolean;\n        limit: number;\n        searchTerm: string | null;\n        commonCarriers: typeof commonCarriers;\n    } {\n        return {\n            isPayPalEnabled: true,\n            limit: 50,\n            searchTerm: null,\n            commonCarriers,\n        };\n    },\n\n    computed: {\n        carrierSelect(): SwSingleSelect {\n            return this.$refs.carrierSelect || { results: [] };\n        },\n\n        shippingMethodCustomFields(): CustomFields {\n            const shippingMethod = this.shippingMethod as TEntity<'shipping_method'>;\n\n            return shippingMethod.customFields;\n        },\n\n        payPalDefaultCarrier: {\n            get(): string {\n                return this.shippingMethodCustomFields?.swag_paypal_carrier || '';\n            },\n            set(value?: string) {\n                if (value === 'OTHER' && this.selectedCarrierOption?.isInvalid) {\n                    this.payPalOtherCarrierName = this.payPalDefaultCarrier;\n                }\n\n                this.setCustomFieldValue('swag_paypal_carrier', value || '');\n            },\n        },\n\n        payPalOtherCarrierName: {\n            get(): string {\n                return this.shippingMethodCustomFields?.swag_paypal_carrier_other_name || '';\n            },\n            set(value?: string) {\n                this.setCustomFieldValue('swag_paypal_carrier_other_name', value || '');\n            },\n        },\n\n        selectedCarrierOption() {\n            const validCarrier = carriers.find((carrier) => carrier.value === this.payPalDefaultCarrier);\n\n            if (!validCarrier && this.payPalDefaultCarrier) {\n                return {\n                    value: this.payPalDefaultCarrier,\n                    description: this.payPalDefaultCarrier,\n                    isInvalid: true,\n                };\n            }\n\n            return validCarrier;\n        },\n\n        carrierOptions() {\n            const selected = this.selectedCarrierOption && !this.searchTerm ? [this.selectedCarrierOption] : [];\n\n            const options = carriers\n                .filter((carrier) => {\n                    return carrier.value !== this.selectedCarrierOption?.value && (!this.searchTerm\n                        || carrier.description.toLowerCase().includes(this.searchTerm.toLowerCase())\n                        || carrier.value.toLowerCase().includes(this.searchTerm.toLowerCase()));\n                });\n\n            options.splice(this.limit);\n            options.splice(0, 0, ...selected);\n\n            return options;\n        },\n\n        carrierInvalidError() {\n            if (this.selectedCarrierOption?.isInvalid) {\n                return { detail: this.$t('swag-paypal-settings-shipping-carrier.invalid') };\n            }\n\n            return undefined;\n        },\n    },\n\n    methods: {\n        createdComponent() {\n            this.$super('createdComponent');\n\n            this.fetchConfigCredentials();\n        },\n\n        setCustomFieldValue<T extends keyof CustomFields>(field: T, value: CustomFields[T]) {\n            Utils.object.set(this.shippingMethod as TEntity<'shipping_method'>, `customFields.${field}`, value);\n        },\n\n        paginateCarriers() {\n            this.limit += 50;\n\n            (this.$refs.carrierSelect as SwSingleSelect).results = this.carrierOptions;\n        },\n\n        searchCarriers(searchTerm: string | null) {\n            this.limit = 50;\n            this.searchTerm = searchTerm;\n\n            (this.$refs.carrierSelect as SwSingleSelect).results = this.carrierOptions;\n        },\n\n        onCarrierSelectOpen() {\n            this.limit = 50;\n            this.searchTerm = null;\n        },\n\n        fetchConfigCredentials() {\n            this.systemConfigApiService\n                .getValues('SwagPayPal.settings', null)\n                .then((values: PayPal.SystemConfig) => {\n                    this.isPayPalEnabled = !!values['SwagPayPal.settings.merchantPayerId']\n                        || !!values['SwagPayPal.settings.merchantPayerIdSandbox'];\n                });\n        },\n    },\n});\n\n"],"names":["template","commonCarriers","descriptionPatch","stripHTML","carriers","shipmentCarrier","carrier","a","b","aIncluded","bIncluded","Utils","index","_a","value","validCarrier","selected","options","field","searchTerm","values"],"mappings":"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"}