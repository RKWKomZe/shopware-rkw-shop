{"version":3,"file":"index-DVkGKjlB.js","sources":["../../../app/administration/src/module/extension/sw-first-run-wizard/sw-first-run-wizard-paypal-credentials/sw-first-run-wizard-paypal-credentials.html.twig","../../../app/administration/src/module/extension/sw-first-run-wizard/sw-first-run-wizard-paypal-credentials/index.ts"],"sourcesContent":["{% block sw_first_run_wizard_paypal_credentials %}\n<div class=\"sw-first-run-wizard-paypal-credentials\">\n    <p class=\"sw-first-run-wizard-paypal-credentials__headerText\">\n        {{ $t('swag-paypal-frw-credentials.textIntroPayPal') }}\n    </p>\n\n    <template v-if=\"settingsStore.isLoading\">\n        <sw-skeleton-bar />\n        <sw-skeleton-bar />\n        <sw-skeleton-bar />\n    </template>\n\n    <template v-else>\n        <swag-paypal-setting\n            path=\"SwagPayPal.settings.sandbox\"\n            :bordered=\"false\"\n            :disabled=\"inputsDisabled\"\n            @update:value=\"resetError()\"\n        />\n\n        <swag-paypal-onboarding-button\n            v-show=\"!settingsStore.isSandbox\"\n            mode=\"live\"\n            :disabled=\"inputsDisabled\"\n        >\n            {{ $t('swag-paypal-frw-credentials.buttonGetCredentials') }}\n        </swag-paypal-onboarding-button>\n\n        <swag-paypal-onboarding-button\n            v-show=\"settingsStore.isSandbox\"\n            mode=\"sandbox\"\n            :disabled=\"inputsDisabled\"\n        >\n            {{ $t('swag-paypal-frw-credentials.buttonGetSandboxCredentials') }}\n        </swag-paypal-onboarding-button>\n\n        <swag-paypal-setting\n            v-show=\"!settingsStore.isSandbox\"\n            path=\"SwagPayPal.settings.clientId\"\n            :disabled=\"inputsDisabled\"\n            :error=\"error\"\n        />\n        <swag-paypal-setting\n            v-show=\"!settingsStore.isSandbox\"\n            path=\"SwagPayPal.settings.clientSecret\"\n            :disabled=\"inputsDisabled\"\n            :error=\"error\"\n        />\n        <swag-paypal-setting\n            v-show=\"!settingsStore.isSandbox\"\n            path=\"SwagPayPal.settings.merchantPayerId\"\n            :disabled=\"inputsDisabled\"\n            :error=\"error\"\n        />\n\n        <swag-paypal-setting\n            v-show=\"settingsStore.isSandbox\"\n            path=\"SwagPayPal.settings.clientIdSandbox\"\n            :disabled=\"inputsDisabled\"\n            :error=\"error\"\n        />\n        <swag-paypal-setting\n            v-show=\"settingsStore.isSandbox\"\n            path=\"SwagPayPal.settings.clientSecretSandbox\"\n            :disabled=\"inputsDisabled\"\n            :error=\"error\"\n        />\n        <swag-paypal-setting\n            v-show=\"settingsStore.isSandbox\"\n            path=\"SwagPayPal.settings.merchantPayerIdSandbox\"\n            :disabled=\"inputsDisabled\"\n            :error=\"error\"\n        />\n\n        <mt-switch\n            v-model:modelValue=\"asDefault\"\n            :disabled=\"!hasCredentials || inputsDisabled\"\n            :label=\"$t('swag-paypal-frw-credentials.labelSetDefault')\"\n            :helpText=\"$t('swag-paypal-frw-credentials.tooltipSetDefault')\"\n        />\n\n        <sw-loader v-if=\"isLoading\" />\n    </template>\n</div>\n{% endblock %}\n","import template from './sw-first-run-wizard-paypal-credentials.html.twig';\nimport './sw-first-run-wizard-paypal-credentials.scss';\n\nexport default Shopware.Component.wrapComponentConfig({\n    template,\n\n    inject: [\n        'SwagPaypalPaymentMethodService',\n        'SwagPayPalSettingsService',\n    ],\n\n    emits: ['frw-redirect'],\n\n    mixins: [\n        Shopware.Mixin.getByName('swag-paypal-notification'),\n        Shopware.Mixin.getByName('swag-paypal-settings'),\n    ],\n\n    data(): {\n        isLoading: boolean;\n        asDefault: boolean;\n        error: { detail: string; code: string } | null;\n    } {\n        return {\n            isLoading: false,\n            asDefault: false,\n            error: null,\n        };\n    },\n\n    computed: {\n        buttonConfig() {\n            const prev = this.$super('buttonConfig') as { key: string; action: () => Promise<boolean> }[];\n\n            return prev.map((button) => {\n                if (button.key === 'next') {\n                    button.action = this.onClickNext.bind(this);\n                }\n\n                return button;\n            });\n        },\n\n        hasLiveCredentials() {\n            return !!this.settingsStore.get('SwagPayPal.settings.clientId')\n                && !!this.settingsStore.get('SwagPayPal.settings.clientSecret');\n        },\n\n        hasSandboxCredentials() {\n            return !!this.settingsStore.get('SwagPayPal.settings.clientIdSandbox')\n                && !!this.settingsStore.get('SwagPayPal.settings.clientSecretSandbox');\n        },\n\n        hasCredentials() {\n            return (!this.settingsStore.isSandbox && this.hasLiveCredentials)\n                || (this.settingsStore.isSandbox && this.hasSandboxCredentials);\n        },\n\n        inputsDisabled() {\n            return this.isLoading || this.settingsStore.isLoading || this.savingSettings === 'loading';\n        },\n    },\n\n    watch: {\n        'settingsStore.allConfigs': {\n            deep: true,\n            handler() {\n                this.resetError();\n            },\n        },\n    },\n\n    methods: {\n        async onClickNext(): Promise<boolean> {\n            if (!this.hasCredentials) {\n                this.createNotificationError({\n                    message: this.$t('swag-paypal-frw-credentials.messageNoCredentials'),\n                });\n\n                return true;\n            }\n\n            this.isLoading = true;\n\n            const information = (await this.saveSettings())?.null;\n\n            const haveChanged = (!this.settingsStore.isSandbox && information?.liveCredentialsChanged) || (this.settingsStore.isSandbox && information?.sandboxCredentialsChanged);\n            let areValid = (!this.settingsStore.isSandbox && information?.liveCredentialsValid) || (this.settingsStore.isSandbox && information?.sandboxCredentialsValid);\n\n            if (!haveChanged) {\n                areValid = await this.onTest();\n            }\n\n            this.isLoading = false;\n\n            if (!areValid) {\n                this.error = {\n                    detail: this.$t('swag-paypal-frw-credentials.messageInvalidCredentials'),\n                    code: 'ASD',\n                };\n\n                return true;\n            }\n\n            this.$emit('frw-redirect', 'sw.first.run.wizard.index.plugins');\n\n            if (this.asDefault) {\n                try {\n                    await this.SwagPaypalPaymentMethodService.setDefaultPaymentForSalesChannel(this.settingsStore.salesChannel);\n                } catch {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        resetError() {\n            this.error = null;\n        },\n\n        async onTest() {\n            const suffix = this.settingsStore.isSandbox ? 'Sandbox' : '';\n\n            return this.SwagPayPalSettingsService\n                .testApiCredentials(\n                    this.settingsStore.get(`SwagPayPal.settings.clientId${suffix}`),\n                    this.settingsStore.get(`SwagPayPal.settings.clientSecret${suffix}`),\n                    this.settingsStore.get(`SwagPayPal.settings.merchantPayerId${suffix}`),\n                    this.settingsStore.isSandbox,\n                )\n                .then((response) => response.valid)\n                .catch(() => false);\n        },\n    },\n});\n"],"names":["template","index","button","_a","information","haveChanged","areValid","suffix","response"],"mappings":"AAAA,MAAAA,EAAe,u/DCGfC,EAAe,SAAS,UAAU,oBAAoB,CAClD,SAAAD,EAEA,OAAQ,CACJ,iCACA,2BAAA,EAGJ,MAAO,CAAC,cAAc,EAEtB,OAAQ,CACJ,SAAS,MAAM,UAAU,0BAA0B,EACnD,SAAS,MAAM,UAAU,sBAAsB,CAAA,EAGnD,MAIE,CACE,MAAO,CACH,UAAW,GACX,UAAW,GACX,MAAO,IAAA,CACX,EAGJ,SAAU,CACN,cAAe,CAGX,OAFa,KAAK,OAAO,cAAc,EAE3B,IAAKE,IACTA,EAAO,MAAQ,SACfA,EAAO,OAAS,KAAK,YAAY,KAAK,IAAI,GAGvCA,EACV,CAAA,EAGL,oBAAqB,CACjB,MAAO,CAAC,CAAC,KAAK,cAAc,IAAI,8BAA8B,GACvD,CAAC,CAAC,KAAK,cAAc,IAAI,kCAAkC,CAAA,EAGtE,uBAAwB,CACpB,MAAO,CAAC,CAAC,KAAK,cAAc,IAAI,qCAAqC,GAC9D,CAAC,CAAC,KAAK,cAAc,IAAI,yCAAyC,CAAA,EAG7E,gBAAiB,CACb,MAAQ,CAAC,KAAK,cAAc,WAAa,KAAK,oBACtC,KAAK,cAAc,WAAa,KAAK,qBAAA,EAGjD,gBAAiB,CACb,OAAO,KAAK,WAAa,KAAK,cAAc,WAAa,KAAK,iBAAmB,SAAA,CACrF,EAGJ,MAAO,CACH,2BAA4B,CACxB,KAAM,GACN,SAAU,CACN,KAAK,WAAA,CAAW,CACpB,CACJ,EAGJ,QAAS,CACL,MAAM,aAAgC,CDzE9C,IAAAC,EC0EY,GAAI,CAAC,KAAK,eACN,YAAK,wBAAwB,CACzB,QAAS,KAAK,GAAG,kDAAkD,CAAA,CACtE,EAEM,GAGX,KAAK,UAAY,GAEjB,MAAMC,GAAeD,EAAA,MAAM,KAAK,aAAA,IAAX,YAAAA,EAA4B,KAE3CE,EAAe,CAAC,KAAK,cAAc,YAAaD,GAAA,YAAAA,EAAa,yBAA4B,KAAK,cAAc,YAAaA,GAAA,YAAAA,EAAa,2BAC5I,IAAIE,EAAY,CAAC,KAAK,cAAc,YAAaF,GAAA,YAAAA,EAAa,uBAA0B,KAAK,cAAc,YAAaA,GAAA,YAAAA,EAAa,yBAQrI,GANKC,IACDC,EAAW,MAAM,KAAK,OAAA,GAG1B,KAAK,UAAY,GAEb,CAACA,EACD,YAAK,MAAQ,CACT,OAAQ,KAAK,GAAG,uDAAuD,EACvE,KAAM,KAAA,EAGH,GAKX,GAFA,KAAK,MAAM,eAAgB,mCAAmC,EAE1D,KAAK,UACL,GAAI,CACA,MAAM,KAAK,+BAA+B,iCAAiC,KAAK,cAAc,YAAY,CAAA,MACtG,CACJ,MAAO,EAAA,CAIf,MAAO,EAAA,EAGX,YAAa,CACT,KAAK,MAAQ,IAAA,EAGjB,MAAM,QAAS,CACX,MAAMC,EAAS,KAAK,cAAc,UAAY,UAAY,GAE1D,OAAO,KAAK,0BACP,mBACG,KAAK,cAAc,IAAI,+BAA+BA,CAAM,EAAE,EAC9D,KAAK,cAAc,IAAI,mCAAmCA,CAAM,EAAE,EAClE,KAAK,cAAc,IAAI,sCAAsCA,CAAM,EAAE,EACrE,KAAK,cAAc,SAAA,EAEtB,KAAMC,GAAaA,EAAS,KAAK,EACjC,MAAM,IAAM,EAAK,CAAA,CAC1B,CAER,CAAC"}