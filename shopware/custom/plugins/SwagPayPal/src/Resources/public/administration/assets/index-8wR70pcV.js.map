{"version":3,"file":"index-8wR70pcV.js","sources":["../../../app/administration/src/module/swag-paypal-settings/components/swag-paypal-settings-webhook/swag-paypal-settings-webhook.html.twig","../../../app/administration/src/module/swag-paypal-settings/components/swag-paypal-settings-webhook/index.ts"],"sourcesContent":["<mt-card\n    class=\"swag-paypal-settings-webhook\"\n    position-identifier=\"swag-paypal-settings-webhook\"\n    :is-loading=\"status !== 'none'\"\n>\n    <template #title>\n        <div class=\"swag-paypal-settings-webhook__title\">\n            <p>\n                {{ $t('swag-paypal-settings.webhook.title') }}\n            </p>\n\n            <sw-label\n                class=\"swag-paypal-settings-webhook__label\"\n                appearance=\"pill\"\n                size=\"medium\"\n                :variant=\"webhookStatusVariant\"\n            >\n                <sw-color-badge :rounded=\"true\" :variant=\"webhookStatusVariant\" />\n                <span>{{ webhookStatusLabel }}</span>\n            </sw-label>\n        </div>\n    </template>\n\n    <div class=\"swag-paypal-settings-webhook__content\">\n        <span class=\"swag-paypal-settings-webhook__info-text\">\n            {{ $t('swag-paypal-settings.webhook.info') }}\n        </span>\n\n        <mt-button\n            class=\"swag-paypal-settings-webhook__refresh-button\"\n            variant=\"secondary\"\n            :disabled=\"status !== 'none' || !allowRefresh || !acl.can('swag_paypal.editor')\"\n            :is-loading=\"status === 'refreshing'\"\n            @click=\"onRefreshWebhook\"\n        >\n            {{ $t('swag-paypal-settings.webhook.buttonRefresh') }}\n        </mt-button>\n    </div>\n</mt-card>\n","import type * as PayPal from 'SwagPayPal/types';\nimport template from './swag-paypal-settings-webhook.html.twig';\nimport './swag-paypal-settings-webhook.scss';\n\nconst STATUS_WEBHOOK_MISSING = 'missing';\nconst STATUS_WEBHOOK_INVALID = 'invalid';\nconst STATUS_WEBHOOK_VALID = 'valid';\n\nexport default Shopware.Component.wrapComponentConfig({\n    template,\n\n    inject: [\n        'acl',\n        'SwagPayPalWebhookService',\n    ],\n\n    mixins: [\n        Shopware.Mixin.getByName('swag-paypal-notification'),\n    ],\n\n    data(): {\n        allWebhookStatus: Record<string, string | undefined>;\n        status: 'none' | 'fetching' | 'refreshing';\n    } {\n        return {\n            allWebhookStatus: {},\n            status: 'none',\n        };\n    },\n\n    computed: {\n        settingsStore() {\n            return Shopware.Store.get('swagPayPalSettings');\n        },\n\n        webhookStatus(): string | undefined {\n            return this.allWebhookStatus[String(this.settingsStore.salesChannel)];\n        },\n\n        webhookStatusLabel() {\n            return this.$t(`swag-paypal-settings.webhook.status.${this.webhookStatus || 'unknown'}`);\n        },\n\n        webhookStatusVariant(): 'danger' | 'warning' | 'success' | 'neutral' {\n            switch (this.webhookStatus) {\n                case STATUS_WEBHOOK_MISSING:\n                    return 'danger';\n\n                case STATUS_WEBHOOK_INVALID:\n                    return 'warning';\n\n                case STATUS_WEBHOOK_VALID:\n                    return 'success';\n\n                default:\n                    return 'neutral';\n            }\n        },\n\n        allowRefresh(): boolean {\n            return [STATUS_WEBHOOK_INVALID, STATUS_WEBHOOK_MISSING]\n                .includes(this.webhookStatus ?? '');\n        },\n    },\n\n    watch: {\n        'settingsStore.salesChannel': {\n            immediate: true,\n            handler() {\n                this.fetchWebhookStatus(this.settingsStore.salesChannel);\n            },\n        },\n    },\n\n    methods: {\n        fetchWebhookStatus(salesChannelId: string | null) {\n            if (this.webhookStatus) {\n                return;\n            }\n\n            this.status = 'fetching';\n\n            this.SwagPayPalWebhookService.status(salesChannelId)\n                .then((response) => {\n                    this.allWebhookStatus[String(salesChannelId)] = response.result;\n                    this.status = 'none';\n                })\n                .catch((errorResponse: PayPal.ServiceError) => {\n                    this.createNotificationError({\n                        title: this.$t('swag-paypal.notifications.webhook.title'),\n                        message: this.$t('swag-paypal.notifications.webhook.errorMessage', {\n                            message: this.createMessageFromError(errorResponse),\n                        }),\n                    });\n                });\n        },\n\n        async onRefreshWebhook() {\n            this.status = 'refreshing';\n\n            await this.SwagPayPalWebhookService\n                .register(this.settingsStore.salesChannel)\n                .catch((errorResponse: PayPal.ServiceError) => {\n                    this.createNotificationError({\n                        title: this.$t('swag-paypal.notifications.webhook.title'),\n                        message: this.$t('swag-paypal.notifications.webhook.errorMessage', {\n                            message: this.createMessageFromError(errorResponse),\n                        }),\n                    });\n                });\n\n            this.status = 'none';\n\n            this.fetchWebhookStatus(this.settingsStore.salesChannel);\n        },\n    },\n});\n"],"names":["template","STATUS_WEBHOOK_MISSING","STATUS_WEBHOOK_INVALID","STATUS_WEBHOOK_VALID","index","salesChannelId","response","errorResponse"],"mappings":"AAAA,MAAAA,EAAe,+9BCITC,EAAyB,UACzBC,EAAyB,UACzBC,EAAuB,QAE7BC,EAAe,SAAS,UAAU,oBAAoB,CAClD,SAAAJ,EAEA,OAAQ,CACJ,MACA,0BAAA,EAGJ,OAAQ,CACJ,SAAS,MAAM,UAAU,0BAA0B,CAAA,EAGvD,MAGE,CACE,MAAO,CACH,iBAAkB,CAAA,EAClB,OAAQ,MAAA,CACZ,EAGJ,SAAU,CACN,eAAgB,CACZ,OAAO,SAAS,MAAM,IAAI,oBAAoB,CAAA,EAGlD,eAAoC,CAChC,OAAO,KAAK,iBAAiB,OAAO,KAAK,cAAc,YAAY,CAAC,CAAA,EAGxE,oBAAqB,CACjB,OAAO,KAAK,GAAG,uCAAuC,KAAK,eAAiB,SAAS,EAAE,CAAA,EAG3F,sBAAqE,CACjE,OAAQ,KAAK,cAAA,CACT,KAAKC,EACD,MAAO,SAEX,KAAKC,EACD,MAAO,UAEX,KAAKC,EACD,MAAO,UAEX,QACI,MAAO,SAAA,CACf,EAGJ,cAAwB,CACpB,MAAO,CAACD,EAAwBD,CAAsB,EACjD,SAAS,KAAK,eAAiB,EAAE,CAAA,CAC1C,EAGJ,MAAO,CACH,6BAA8B,CAC1B,UAAW,GACX,SAAU,CACN,KAAK,mBAAmB,KAAK,cAAc,YAAY,CAAA,CAC3D,CACJ,EAGJ,QAAS,CACL,mBAAmBI,EAA+B,CAC1C,KAAK,gBAIT,KAAK,OAAS,WAEd,KAAK,yBAAyB,OAAOA,CAAc,EAC9C,KAAMC,GAAa,CAChB,KAAK,iBAAiB,OAAOD,CAAc,CAAC,EAAIC,EAAS,OACzD,KAAK,OAAS,MAAA,CACjB,EACA,MAAOC,GAAuC,CAC3C,KAAK,wBAAwB,CACzB,MAAO,KAAK,GAAG,yCAAyC,EACxD,QAAS,KAAK,GAAG,iDAAkD,CAC/D,QAAS,KAAK,uBAAuBA,CAAa,CAAA,CACrD,CAAA,CACJ,CAAA,CACJ,EAAA,EAGT,MAAM,kBAAmB,CACrB,KAAK,OAAS,aAEd,MAAM,KAAK,yBACN,SAAS,KAAK,cAAc,YAAY,EACxC,MAAOA,GAAuC,CAC3C,KAAK,wBAAwB,CACzB,MAAO,KAAK,GAAG,yCAAyC,EACxD,QAAS,KAAK,GAAG,iDAAkD,CAC/D,QAAS,KAAK,uBAAuBA,CAAa,CAAA,CACrD,CAAA,CACJ,CAAA,CACJ,EAEL,KAAK,OAAS,OAEd,KAAK,mBAAmB,KAAK,cAAc,YAAY,CAAA,CAC3D,CAER,CAAC"}