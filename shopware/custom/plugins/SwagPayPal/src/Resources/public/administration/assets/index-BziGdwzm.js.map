{"version":3,"file":"index-BziGdwzm.js","sources":["../../../app/administration/src/app/component/swag-paypal-onboarding-button/swag-paypal-onboarding-button.html.twig","../../../app/administration/src/app/component/swag-paypal-onboarding-button/index.ts"],"sourcesContent":["<a\n    :href=\"onboardingUrl\"\n    :class=\"classes\"\n    class=\"swag-paypal-onboarding-button\"\n    target=\"_paypal\"\n    :data-paypal-onboard-complete=\"callbackName\"\n    data-paypal-button=\"true\"\n>\n    <mt-loader\n        v-if=\"isLoading\"\n        class=\"swag-paypal-onboarding-button__loader\"\n        size=\"20px\"\n    />\n\n    <slot>\n        {{ buttonTitle }}\n    </slot>\n</a>\n","import template from './swag-paypal-onboarding-button.html.twig';\nimport './swag-paypal-onboarding-button.scss';\nimport type * as PayPal from 'SwagPayPal/types';\n\n/**\n * @private - The component has a stable public API (props), but expect that implementation details may change.\n */\nexport default Shopware.Component.wrapComponentConfig({\n    template,\n\n    inject: [\n        'acl',\n        'SwagPayPalSettingsService',\n    ],\n\n    emits: ['onboarded'],\n\n    mixins: [\n        Shopware.Mixin.getByName('swag-paypal-notification'),\n    ],\n\n    props: {\n        mode: {\n            type: String as PropType<'live' | 'sandbox'>,\n            required: false,\n            default: 'live',\n        },\n        variant: {\n            type: String as PropType<'ghost' | 'link'>,\n            required: false,\n            default: 'ghost',\n        },\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            // Will allow local overrides as props are readonly.\n            // Note that this is overridden if the prop changes.\n            type: this.mode,\n\n            callbackId: Shopware.Utils.createId(),\n\n            isLoading: true,\n\n            scriptId: 'paypal-js',\n            scriptURL: 'https://www.paypal.com/webapps/merchantboarding/js/lib/lightbox/partner.js',\n\n            live: {\n                partnerId: 'DYKPBPEAW5JNA',\n                partnerClientId: 'AR1aQ13lHxH1c6b3CDd8wSY6SWad2Lt5fv5WkNIZg-qChBoGNfHr2kT180otUmvE_xXtwkgahXUBBurW',\n                sellerNonce: `${Shopware.Utils.createId()}${Shopware.Utils.createId()}`,\n            },\n            sandbox: {\n                partnerId: '45KXQA7PULGAG',\n                partnerClientId: 'AQ9g8qMYHpE8s028VCq_GO3Roy9pjeqGDjKTkR_sxzX0FtncBb3QUWbFtoQMtdpe2lG9NpnDT419dK8s',\n                sellerNonce: `${Shopware.Utils.createId()}${Shopware.Utils.createId()}`,\n            },\n            commonRequestParams: {\n                channelId: 'partner',\n                product: 'ppcp',\n                secondaryProducts: 'advanced_vaulting,PAYMENT_METHODS',\n                capabilities: [\n                    'APPLE_PAY',\n                    'GOOGLE_PAY',\n                    'PAY_UPON_INVOICE',\n                    'PAYPAL_WALLET_VAULTING_ADVANCED',\n                ].join(','),\n                integrationType: 'FO',\n                features: [\n                    'PAYMENT',\n                    'REFUND',\n                    'READ_SELLER_DISPUTE',\n                    'UPDATE_SELLER_DISPUTE',\n                    'ADVANCED_TRANSACTIONS_SEARCH',\n                    'ACCESS_MERCHANT_INFORMATION',\n                    'TRACKING_SHIPMENT_READWRITE',\n                    'VAULT',\n                    'BILLING_AGREEMENT',\n                ].join(','),\n                displayMode: 'minibrowser',\n                partnerLogoUrl: 'https://assets.shopware.com/media/logos/shopware_logo_blue.svg',\n            },\n        };\n    },\n\n    watch: {\n        mode() {\n            this.type = this.mode;\n        },\n        '$route.query'(query: Record<string, unknown>) {\n            if (Object.hasOwn(query, 'ppOnboarding')) {\n                this.completeOnboarding();\n            }\n        },\n    },\n\n    computed: {\n        settingsStore() {\n            return Shopware.Store.get('swagPayPalSettings');\n        },\n\n        merchantInformationStore() {\n            return Shopware.Store.get('swagPayPalMerchantInformation');\n        },\n\n        isSandbox() {\n            return this.type === 'sandbox';\n        },\n\n        suffix() {\n            return this.isSandbox ? 'Sandbox' : '';\n        },\n\n        returnUrl(): string {\n            return `${window.location.origin}${window.location.pathname}#${this.$route.path}?ppOnboarding=${this.type}`;\n        },\n\n        requestParams() {\n            return this.isSandbox ? this.sandbox : this.live;\n        },\n\n        onboardingUrl() {\n            const url = new URL('/bizsignup/partner/entry', this.isSandbox ? 'https://www.sandbox.paypal.com' : 'https://www.paypal.com');\n\n            url.search = (new URLSearchParams({\n                ...this.commonRequestParams,\n                ...this.requestParams,\n                returnToPartnerUrl: this.returnUrl,\n            })).toString();\n\n            return url.href;\n        },\n\n        buttonTitle(): string {\n            if (!this.settingsStore.get(`SwagPayPal.settings.clientSecret${this.suffix}`)) {\n                return this.$t(`swag-paypal-onboarding-button.${this.type}.title`);\n            }\n\n            if (this.settingsStore.isSandbox === this.isSandbox && !this.merchantInformationStore.canPPCP) {\n                return this.$t(`swag-paypal-onboarding-button.${this.type}.onboardingTitle`);\n            }\n\n            return this.$t(`swag-paypal-onboarding-button.${this.type}.changeTitle`);\n        },\n\n        callbackName(): `onboardingCallback${string}` {\n            return `onboardingCallback${this.callbackId}`;\n        },\n\n        isDisabled() {\n            return !this.acl.can('swag_paypal.editor') || this.isLoading || this.disabled;\n        },\n\n        classes() {\n            return {\n                'is--sandbox': this.isSandbox,\n                'is--live': !this.isSandbox,\n                'is--link': this.variant === 'link',\n                'is--ghost': this.variant === 'ghost',\n                'is--disabled': this.isDisabled,\n            };\n        },\n    },\n\n    mounted() {\n        this.onMounted();\n    },\n\n    beforeUnmount() {\n        delete window[this.callbackName];\n    },\n\n    methods: {\n        onMounted() {\n            if (!this.acl.can('swag_paypal.editor')) {\n                return;\n            }\n\n            if (Object.hasOwn(this.$route.query, 'ppOnboarding')) {\n                this.completeOnboarding();\n            }\n\n            window[this.callbackName] = (authCode, sharedId) => {\n                this.fetchCredentials(authCode, sharedId);\n            };\n\n            this.loadPayPalScript();\n        },\n\n        createScriptElement(): HTMLScriptElement {\n            const payPalScript = document.createElement('script');\n            payPalScript.id = this.scriptId;\n            payPalScript.type = 'text/javascript';\n            payPalScript.src = this.scriptURL;\n            payPalScript.async = true;\n\n            document.head.appendChild(payPalScript);\n\n            return payPalScript;\n        },\n\n        loadPayPalScript() {\n            const el = document.getElementById(this.scriptId) ?? this.createScriptElement();\n\n            if (window.PAYPAL) {\n                this.isLoading = false;\n                if (window.PAYPAL.apps.Signup.setup) {\n                    window.PAYPAL.apps.Signup.setup();\n                } else {\n                    window.PAYPAL.apps.Signup.render();\n                }\n            } else {\n                el.addEventListener('load', () => void this.renderPayPalButton(), false);\n            }\n        },\n\n        async renderPayPalButton() {\n            this.isLoading = true;\n\n            // maybe another button instance already started loading and rendering\n            if (!window.paypalScriptPromise) {\n                window.PAYPAL!.apps.Signup.render = function proxyPPrender() {};\n                window.paypalScriptPromise = this.waitForScriptsLoaded();\n            }\n\n            await window.paypalScriptPromise;\n\n            this.isLoading = false;\n        },\n\n        // The partner.js does not provide a stub `setup` function like the `render` function.\n        // The setup function is overriden as soon as all scripts are loaded properly.\n        // Still, just in case we should stop waiting after 30sec.\n        waitForScriptsLoaded(): Promise<void> {\n            let tries = 0;\n\n            const checkFn = (resolve: (() => void)) => {\n                if (tries > 100) {\n                    return resolve();\n                }\n\n                if (window.PAYPAL!.apps.Signup.render.name !== 'proxyPPrender') {\n                    window.PAYPAL!.apps.Signup.render();\n                    return resolve();\n                }\n\n                if (window.PAYPAL!.apps.Signup.setup) {\n                    return resolve();\n                }\n\n                tries += 1;\n                setTimeout(checkFn.bind(this, resolve), 300);\n            };\n\n            return new Promise<void>(checkFn.bind(this));\n        },\n\n        async fetchCredentials(authCode: string, sharedId: string) {\n            if (this.isLoading) {\n                return;\n            }\n\n            this.isLoading = true;\n\n            const response = await this.SwagPayPalSettingsService.getApiCredentials(\n                authCode,\n                sharedId,\n                this.requestParams.sellerNonce,\n                this.isSandbox,\n            ).catch((error: PayPal.ServiceError) => {\n                this.createNotificationError({\n                    title: this.$t('swag-paypal.notifications.credentials.title'),\n                    message: this.$t('swag-paypal.notifications.credentials.errorMessage', {\n                        message: this.createMessageFromError(error),\n                    }),\n                });\n\n                return {} as Record<string, string>;\n            });\n\n            this.setConfig(response.client_id, response.client_secret, response.payer_id);\n\n            this.isLoading = false;\n        },\n\n        setConfig(clientId?: string, clientSecret?: string, merchantPayerId?: string) {\n            this.settingsStore.set(`SwagPayPal.settings.clientId${this.suffix}`, clientId);\n            this.settingsStore.set(`SwagPayPal.settings.clientSecret${this.suffix}`, clientSecret);\n            this.settingsStore.set(`SwagPayPal.settings.merchantPayerId${this.suffix}`, merchantPayerId);\n\n            // First time onboarding\n            if (!this.merchantInformationStore.canPPCP) {\n                this.settingsStore.set('SwagPayPal.settings.sandbox', this.isSandbox);\n            }\n\n            this.$emit('onboarded');\n        },\n\n        completeOnboarding() {\n            const { ppOnboarding, merchantIdInPayPal } = this.$route.query;\n\n            this.$router.replace({ query: {} });\n\n            if (!merchantIdInPayPal || ppOnboarding !== 'sandbox' && ppOnboarding !== 'live') {\n                return;\n            }\n\n            const suffix = ppOnboarding === 'sandbox' ? 'Sandbox' : '';\n            const merchantPayerId = String(merchantIdInPayPal);\n            this.settingsStore.set(\n                `SwagPayPal.settings.merchantPayerId${suffix}`,\n                merchantPayerId,\n            );\n\n            this.$emit('onboarded');\n        },\n    },\n});\n"],"names":["template","index","query","url","authCode","sharedId","payPalScript","el","tries","checkFn","resolve","response","error","clientId","clientSecret","merchantPayerId","ppOnboarding","merchantIdInPayPal","suffix"],"mappings":"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"}