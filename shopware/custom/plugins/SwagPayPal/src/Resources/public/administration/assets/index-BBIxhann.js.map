{"version":3,"file":"index-BBIxhann.js","sources":["../../../app/administration/src/module/swag-paypal-method/view/swag-paypal-method-card/swag-paypal-method-card.html.twig","../../../app/administration/src/module/swag-paypal-method/view/swag-paypal-method-card/index.ts"],"sourcesContent":["<mt-card\n    class=\"swag-paypal-method-card sw-card--grid\"\n    position-identifier=\"swag-paypal-method-card\"\n>\n    <template #avatar>\n        <img\n            :src=\"assetFilter('swagpaypal/administration/static/img/paypal-logo-avatar.svg')\"\n            :alt=\"$t('swag-paypal-method.appImageAlt')\"\n        >\n    </template>\n\n    <template #title>\n        <div class=\"swag-paypal-method-card__title\">\n            <p>\n                {{ $t('swag-paypal-method.cardTitle') }}\n            </p>\n\n            <sw-label\n                v-if=\"!merchantInformationStore.isLoading\"\n                class=\"swag-paypal-method-card__status\"\n                size=\"medium\"\n                appearance=\"pill\"\n                :variant=\"statusVariant\"\n            >\n                <sw-color-badge rounded :variant=\"statusVariant\" />\n\n                <span>{{ statusText }}</span>\n            </sw-label>\n        </div>\n    </template>\n\n    <template #headerRight>\n        <div class=\"swag-paypal-method-card__header-right\">\n            <mt-link type=\"internal\" :to=\"{ name: 'swag.paypal.settings.index' }\">\n                {{ $t('swag-paypal-method.settingsLink') }}\n            </mt-link>\n        </div>\n    </template>\n\n    <div class=\"swag-paypal-method-card__content\">\n        <template v-if=\"merchantInformationStore.isLoading\">\n            <sw-skeleton-bar />\n            <sw-skeleton-bar />\n        </template>\n\n        <swag-paypal-method-merchant-information\n            v-else-if=\"showMerchantInformation\"\n            @save=\"saveSettings\"\n        >\n            {% block swag_paypal_method_card_onboarding_buttons_connected %}\n            <swag-paypal-onboarding-button\n                mode=\"live\"\n                @onboarded=\"saveSettings\"\n            />\n\n            <swag-paypal-onboarding-button\n                mode=\"sandbox\"\n                variant=\"link\"\n                @onboarded=\"saveSettings\"\n            />\n            {% endblock %}\n        </swag-paypal-method-merchant-information>\n\n        <template v-else>\n            <div class=\"swag-paypal-method-card__info\">\n                {% block swag_paypal_method_card_info %}\n                <p class=\"swag-paypal-method-card__header\">\n                    {{ $t('swag-paypal-method.header') }}\n                </p>\n\n                <p class=\"swag-paypal-method-card__description\">\n                    {{ $t('swag-paypal-method.description') }}\n                </p>\n                {% endblock %}\n            </div>\n\n            <div class=\"swag-paypal-method-card__onboarding_buttons\">\n                {% block swag_paypal_method_card_onboarding_buttons_disconnected %}\n                <swag-paypal-onboarding-button\n                    mode=\"live\"\n                    @onboarded=\"saveSettings\"\n                />\n\n                <swag-paypal-onboarding-button\n                    mode=\"sandbox\"\n                    variant=\"link\"\n                    @onboarded=\"saveSettings\"\n                />\n                {% endblock %}\n            </div>\n        </template>\n\n        {% block swag_paypal_method_card_payment_methods %}\n        <p class=\"swag-paypal-method-card__payment-method-headline\">\n            {{ $t('swag-paypal-method.paymentMethodText') }}\n        </p>\n\n        <template v-if=\"isLoadingPaymentMethods\">\n            <sw-skeleton-bar />\n            <sw-skeleton-bar />\n            <sw-skeleton-bar />\n        </template>\n\n        <div v-else class=\"swag-paypal-method-card__listing\">\n            <swag-paypal-payment-method\n                v-for=\"paymentMethod in paymentMethods\"\n                :key=\"paymentMethod.id\"\n                :payment-method=\"paymentMethod\"\n                @update:active=\"onUpdateActive(paymentMethod, $event)\"\n            />\n        </div>\n        {% endblock %}\n    </div>\n</mt-card>\n","import template from './swag-paypal-method-card.html.twig';\nimport './swag-paypal-method-card.scss';\n\nconst { Context } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nexport default Shopware.Component.wrapComponentConfig({\n    template,\n\n    inject: [\n        'repositoryFactory',\n    ],\n\n    mixins: [\n        Shopware.Mixin.getByName('notification'),\n        Shopware.Mixin.getByName('swag-paypal-settings'),\n        Shopware.Mixin.getByName('swag-paypal-merchant-information'),\n    ],\n\n    data(): {\n        isLoadingPaymentMethods: boolean;\n        paymentMethods: TEntity<'payment_method'>[];\n    } {\n        return {\n            isLoadingPaymentMethods: true,\n            paymentMethods: [],\n        };\n    },\n\n    computed: {\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n\n        paymentMethodRepository(): TRepository<'payment_method'> {\n            return this.repositoryFactory.create('payment_method');\n        },\n\n        paymentMethodCriteria(): TCriteria {\n            return (new Criteria(1, 500))\n                .addAssociation('media')\n                .addFilter(Criteria.equals('plugin.name', 'SwagPayPal'))\n                .addSorting(Criteria.sort('position', 'ASC'));\n        },\n\n        merchantStatus() {\n            const merchantIntegrations = this.merchantInformationStore.actual.merchantIntegrations;\n\n            if (!merchantIntegrations) {\n                return 'notConnected';\n            } else if (!this.merchantInformationStore.canPPCP) {\n                return 'onboardingNeeded';\n            } else if (!merchantIntegrations?.primary_email_confirmed) {\n                return 'emailUnconfirmed';\n            } else if (!merchantIntegrations?.payments_receivable) {\n                return 'paymentsUnreceivable';\n            } else {\n                return 'connected';\n            }\n        },\n\n        statusVariant() {\n            switch (this.merchantStatus) {\n                case 'onboardingNeeded':\n                case 'notConnected':\n                    return 'danger';\n                case 'emailUnconfirmed':\n                case 'paymentsUnreceivable':\n                    return 'warning';\n                case 'connected':\n                    return 'success';\n            }\n        },\n\n        statusText() {\n            return this.$t(`swag-paypal-method.merchantStatusText.${this.merchantStatus}`);\n        },\n\n        showMerchantInformation() {\n            return this.merchantInformationStore.canPPCP;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.fetchPaymentMethods();\n        },\n\n        async fetchPaymentMethods() {\n            this.isLoadingPaymentMethods = true;\n\n            const paymentMethods = await this.paymentMethodRepository.search(this.paymentMethodCriteria, Context.api)\n                .catch(() => ([]));\n\n            this.paymentMethods = paymentMethods\n                .filter((pm) => {\n                    if (pm.formattedHandlerIdentifier === 'handler_swag_pospayment') {\n                        return false;\n                    }\n\n                    return !([\n                        'handler_swag_trustlyapmhandler',\n                        'handler_swag_giropayapmhandler',\n                        'handler_swag_sofortapmhandler',\n                    ].includes(pm.formattedHandlerIdentifier ?? '') && !pm.active);\n                });\n\n            this.isLoadingPaymentMethods = false;\n        },\n\n        async onUpdateActive(paymentMethod: TEntity<'payment_method'>, active: boolean) {\n            paymentMethod.active = active;\n\n            await this.paymentMethodRepository.save(paymentMethod, Context.api)\n                .then(() => {\n                    this.createNotificationSuccess({\n                        message: this.$t(\n                            `swag-paypal-method.switch.${paymentMethod.active ? 'active' : 'inactive'}`,\n                            { name: paymentMethod.translated?.name || paymentMethod.name },\n                        ),\n                    });\n                })\n                .catch(() => { paymentMethod.active = !active; });\n        },\n    },\n});\n"],"names":["template","Context","Criteria","index","merchantIntegrations","paymentMethods","pm","paymentMethod","active","_a"],"mappings":"AAAA,MAAAA,EAAe,iiFCGT,CAAE,QAAAC,GAAY,SACd,CAAE,SAAAC,CAAA,EAAa,SAAS,KAE9BC,EAAe,SAAS,UAAU,oBAAoB,CAClD,SAAAH,EAEA,OAAQ,CACJ,mBAAA,EAGJ,OAAQ,CACJ,SAAS,MAAM,UAAU,cAAc,EACvC,SAAS,MAAM,UAAU,sBAAsB,EAC/C,SAAS,MAAM,UAAU,kCAAkC,CAAA,EAG/D,MAGE,CACE,MAAO,CACH,wBAAyB,GACzB,eAAgB,CAAA,CAAC,CACrB,EAGJ,SAAU,CACN,aAAc,CACV,OAAO,SAAS,OAAO,UAAU,OAAO,CAAA,EAG5C,yBAAyD,CACrD,OAAO,KAAK,kBAAkB,OAAO,gBAAgB,CAAA,EAGzD,uBAAmC,CAC/B,OAAQ,IAAIE,EAAS,EAAG,GAAG,EACtB,eAAe,OAAO,EACtB,UAAUA,EAAS,OAAO,cAAe,YAAY,CAAC,EACtD,WAAWA,EAAS,KAAK,WAAY,KAAK,CAAC,CAAA,EAGpD,gBAAiB,CACb,MAAME,EAAuB,KAAK,yBAAyB,OAAO,qBAElE,OAAKA,EAEO,KAAK,yBAAyB,QAE9BA,GAAA,MAAAA,EAAsB,wBAEtBA,GAAA,MAAAA,EAAsB,oBAGvB,YAFA,uBAFA,mBAFA,mBAFA,cASX,EAGJ,eAAgB,CACZ,OAAQ,KAAK,eAAA,CACT,IAAK,mBACL,IAAK,eACD,MAAO,SACX,IAAK,mBACL,IAAK,uBACD,MAAO,UACX,IAAK,YACD,MAAO,SAAA,CACf,EAGJ,YAAa,CACT,OAAO,KAAK,GAAG,yCAAyC,KAAK,cAAc,EAAE,CAAA,EAGjF,yBAA0B,CACtB,OAAO,KAAK,yBAAyB,OAAA,CACzC,EAGJ,SAAU,CACN,KAAK,iBAAA,CAAiB,EAG1B,QAAS,CACL,kBAAmB,CACf,KAAK,oBAAA,CAAoB,EAG7B,MAAM,qBAAsB,CACxB,KAAK,wBAA0B,GAE/B,MAAMC,EAAiB,MAAM,KAAK,wBAAwB,OAAO,KAAK,sBAAuBJ,EAAQ,GAAG,EACnG,MAAM,IAAO,CAAA,CAAG,EAErB,KAAK,eAAiBI,EACjB,OAAQC,GACDA,EAAG,6BAA+B,0BAC3B,GAGJ,EAAE,CACL,iCACA,iCACA,+BAAA,EACF,SAASA,EAAG,4BAA8B,EAAE,GAAK,CAACA,EAAG,OAC1D,EAEL,KAAK,wBAA0B,EAAA,EAGnC,MAAM,eAAeC,EAA0CC,EAAiB,CAC5ED,EAAc,OAASC,EAEvB,MAAM,KAAK,wBAAwB,KAAKD,EAAeN,EAAQ,GAAG,EAC7D,KAAK,IAAM,CDtH5B,IAAAQ,ECuHoB,KAAK,0BAA0B,CAC3B,QAAS,KAAK,GACV,6BAA6BF,EAAc,OAAS,SAAW,UAAU,GACzE,CAAE,OAAME,EAAAF,EAAc,aAAd,YAAAE,EAA0B,OAAQF,EAAc,IAAA,CAAK,CACjE,CACH,CAAA,CACJ,EACA,MAAM,IAAM,CAAEA,EAAc,OAAS,CAACC,CAAA,CAAS,CAAA,CACxD,CAER,CAAC"}